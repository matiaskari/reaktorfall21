{"version":3,"sources":["services/rules.js","components/TableOfContents.js","components/FullRules.js","App.js","index.js"],"names":["axios","get","myProxy","headers","then","response","data","TableOfContents","textArray","tocSearch","fullToC","slice","indexOf","setTocSearch","line","chapterStyle","margin","marginTop","padding","fontWeight","backgroundColor","cursor","border","borderRadius","subChapterStyle","marginLeft","listStyle","marginBottom","formatted","map","isNaN","style","type","onClick","split","FullRules","filter","tocChapter","rulesWithoutToC","length","onlyRules","wantedRules","includes","rulesToShow","toLowerCase","toString","generateKey","Math","random","App","useState","rules","setRules","setFilter","setTocChapter","useEffect","rulesService","console","log","formattedText","styles","container","display","flexDirection","flexWrap","alignItems","width","fontFamily","styleToC","flex","borderStyle","borderWidth","styleRules","filterField","paddingBottom","chapter","value","onChange","event","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.84e1bcab.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst myProxy = 'https://gtrcorsproxy.herokuapp.com/'\r\nconst baseUrl = 'https://media.wizards.com/2021/downloads/MagicCompRules%2020210419.txt'\r\n\r\nconst getRules = () => {\r\n    const request = axios.get(myProxy + baseUrl, {\r\n        headers: {\r\n            'Content-Type': 'text/plain'\r\n        }\r\n    })\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { getRules }","const TableOfContents = ({ textArray, tocSearch }) => {\r\n    const fullToC = textArray.slice(textArray.indexOf(\"Contents\") + 1, textArray.indexOf(\"Glossary\"))\r\n    const setTocSearch = (line) => {\r\n        tocSearch(line)\r\n    }\r\n    const chapterStyle = {\r\n        margin: '0',\r\n        marginTop: '10px',\r\n        padding: '5px',\r\n        fontWeight: '600',\r\n        backgroundColor: '#a4d2e0',\r\n        cursor: 'pointer',\r\n        border: 'none',\r\n        borderRadius: '3px'\r\n    }\r\n    const subChapterStyle = {\r\n        margin: '0',\r\n        marginLeft: '15px',\r\n        padding: '3px',\r\n        fontWeight: '400',\r\n        backgroundColor: '#badde8',\r\n        cursor: 'pointer',\r\n        border: 'none',\r\n        borderRadius: '3px'\r\n    }\r\n    const listStyle = {\r\n        margin: '0',\r\n        marginBottom: '3px',\r\n        padding: '0'\r\n    }\r\n\r\n    const formatted = fullToC.map(line => {\r\n        if ((!isNaN(line[0]) && line[1] === '.') || isNaN(line[0])) {\r\n            return <h3 style={listStyle} key={'chapter' + line.split(' ')[0]}><button type='button' style={chapterStyle} onClick={() => setTocSearch(line)}>{line}</button></h3>\r\n        } else {\r\n            return <p style={listStyle} key={'chapter' + line.split(' ')[0]}><button type='button' style={subChapterStyle} onClick={() => setTocSearch(line)}>{line}</button></p>\r\n        }\r\n    })\r\n    return (\r\n        <div>\r\n            <button type='button' style={chapterStyle} onClick={() => setTocSearch('')}>Show all rules</button>\r\n            {formatted}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TableOfContents","\r\nconst FullRules = ({ textArray, filter, tocChapter }) => {\r\n    const rulesWithoutToC = textArray.slice(textArray.indexOf(\"Credits\") + 1, textArray.length)\r\n    const onlyRules = rulesWithoutToC.slice(0, rulesWithoutToC.indexOf(\"Glossary\")) //same as rulesWithoutToC but also Glossary removed\r\n    let wantedRules = ''\r\n    if (tocChapter.length === 0) {\r\n        wantedRules = onlyRules\r\n    } else if (tocChapter.split(' ')[0].length === 2) {\r\n        wantedRules = onlyRules.filter(line => line[0] === tocChapter[0])\r\n    } else {\r\n        wantedRules = onlyRules.filter(line => line.slice(0, 4).includes(tocChapter.split(' ')[0]))\r\n    }\r\n\r\n    const rulesToShow = filter === '' ? wantedRules : wantedRules.filter(line => line.toLowerCase().includes(filter.toString().toLowerCase()))\r\n\r\n    const generateKey = () => {\r\n        const min = 0\r\n        const max = 9999999\r\n        return Math.random() * (max - min) + min\r\n    }\r\n    const formatted = rulesToShow.map(line => {\r\n        if (!isNaN(line[0]) && line[1] === '.') {\r\n            return <h2 key={'rule' + generateKey()}>{line}</h2>\r\n        } else if (!isNaN(line[0]) && line[3] === '.' && line[4] === ' ') {\r\n            return <h3 key={'rule' + generateKey()}>{line}</h3>\r\n        } else {\r\n            return <p key={'rule' + generateKey()}>{line}</p>\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            {formatted.length === 0 ? 'Could not find results for \"' + filter.toString() + '\"' : formatted}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FullRules","\r\nimport React, { useState, useEffect } from 'react'\r\nimport rulesService from './services/rules'\r\nimport TableOfContents from './components/TableOfContents'\r\nimport FullRules from './components/FullRules'\r\n\r\nconst App = () => {\r\n    const [rules, setRules] = useState([])\r\n    const [filter, setFilter] = useState([])\r\n    const [tocChapter, setTocChapter] = useState([])\r\n\r\n    useEffect(() => {\r\n        rulesService.getRules()\r\n            .then(response => {\r\n                console.log('promise fulfilled')\r\n                const formattedText = response.split('\\r\\n').filter(line => line !== \"\")\r\n                setRules(formattedText)\r\n            })\r\n    }, [])\r\n    const changeFilter = (event) => {\r\n        console.log('Current filter:', event.target.value)\r\n        setFilter(event.target.value)\r\n    }\r\n    const setTocSearch = (chapter) => {\r\n        console.log('Viewing chapter:', chapter.length !== 0 ? chapter : 'All')\r\n        setTocChapter(chapter)\r\n    }\r\n\r\n    const styles = {\r\n        container: { //Creating the 2-column layout\r\n            display: 'flex',\r\n            flexDirection: 'row',\r\n            flexWrap: 'wrap',\r\n            alignItems: 'flex-start',\r\n            width: '100%',\r\n            fontFamily: 'Arial, Helvetica, sans-serif'\r\n        },\r\n        styleToC: {\r\n            flex: '1', //Table of Contents width\r\n            width: '20%',\r\n            padding: '20px',\r\n            margin: '5px',\r\n\r\n            borderStyle: 'solid',\r\n            borderRadius: '10px',\r\n            borderWidth: '2px'\r\n        },\r\n        styleRules: {\r\n            flex: '3', //Rules width\r\n            width: '70%',\r\n            padding: '20px',\r\n            margin: '5px',\r\n\r\n            borderStyle: 'solid',\r\n            borderRadius: '10px',\r\n            borderWidth: '2px'\r\n        },\r\n        filterField: {\r\n            paddingBottom: '10px'\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div style={styles.container}>\r\n            <div style={styles.styleToC}><TableOfContents textArray={rules} tocSearch={setTocSearch} /></div>\r\n            <div style={styles.styleRules}>\r\n                <form style={styles.filterField}>Search for rules: <input value={filter} onChange={changeFilter} /></form>\r\n                <FullRules textArray={rules} filter={filter} tocChapter={tocChapter} />\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default App","import ReactDOM from 'react-dom'\r\nimport React from 'react'\r\nimport App from './App'\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById('root')\r\n)"],"sourceRoot":""}